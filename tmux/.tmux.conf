#####################
## General options ##
#####################
set -g default-terminal "tmux-256color"     # Colors!
set -ga terminal-overrides ',xterm-256color:RGB'
set -g history-limit 100000                 # Scroll way more
set -s escape-time 0                        # faster command sequences
set -sg repeat-time 600                     # increase repeat timeout
set -s focus-events on
set -g status-position bottom
set -g allow-rename off
set-window-option -g automatic-rename off

# renumber when window is closed
set -g renumber-window on

################
## Navigation ##
################

# Set C-a the leader key
unbind C-b
set -g prefix C-a
bind C-a send-keys send-prefix

# Set new panes to open in current directory
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

bind C-d detach
bind r source-file ~/.tmux.conf     # Leader + r to reload tmux with new conf

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c '#{pane_current_path}'

bind ^s split-window -v -c "#{pane_current_path}"
bind ^v split-window -h -c "#{pane_current_path}"

# open panes in same path when using canonical tmux splits
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Provide command to generate a 2:1 ratio layout
bind @ \
  split-window -h -c "#{pane_current_path}" -p 33 \;\
  select-pane -L \;\

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind ^h select-pane -L
bind ^j select-pane -D
bind ^k select-pane -U
bind ^l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind -r < resize-pane -L 10
bind -r > resize-pane -R 10
bind -r - resize-pane -D 10
bind -r + resize-pane -U 10
bind = select-layout tiled

bind -n S-Right next-window
bind -n S-Left previous-window

# vi-style controls for copy mode
setw -g mode-keys vi

# Start numbering windows at 1
set -g base-index 1

# ======================================================================================================================
# Tmux Plugin Manager Plugins
#   @see https://github.com/tmux-plugins/tpm
#
# Install plugins by running either prefix + I within a tmux session or
# using the command line to manage plugins:
#   @see https://github.com/tmux-plugins/tpm/blob/master/docs/managing_plugins_via_cmd_line.md
# ======================================================================================================================

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Automatic tmux saving + restoring
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'

# Themes
set -g @plugin 'catppuccin/tmux#v2.1.3'
set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'
set -g @plugin 'alexwforsythe/tmux-which-key'  # prefix + space
set -g @plugin 'sainnhe/tmux-fzf' # prefix + F

# override default resurrect bindings to avoid conflict with existing shortcut
set -g @resurrect-save 'Z'
set -g @resurrect-restore 'R'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Auto install TPM
set-environment -gF TMUX_PLUGIN_MANAGER_PATH '#{HOME}/.tmux/plugins'

if 'test ! -d "${TMUX_PLUGIN_MANAGER_PATH}/tpm"' {
  run 'mkdir -p "${TMUX_PLUGIN_MANAGER_PATH}"'
  run 'git clone https://github.com/tmux-plugins/tpm "${TMUX_PLUGIN_MANAGER_PATH}/tpm"'
  run '${TMUX_PLUGIN_MANAGER_PATH}/tpm/bin/install_plugins'
}

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

# Fix copy/paste on MacOS: https://thoughtbot.com/blog/how-to-copy-and-paste-with-tmux-on-mac-os-x
if-shell "test -f /usr/local/bin/reattach-to-user-namespace" 'set-option -g default-command "reattach-to-user-namespace -l zsh"'

########################################
# Catppuccin Theme
########################################
set -g @catpuccin_flavor "mocha"
set -g @catpuccin_window_status_style "tmux-256color"
set -g @catppuccin_window_status_style "rounded"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_status 'no'
set -g @catppuccin_window_default_text '#W'
set -g @catppuccin_window_text "#W"
set -g @catppuccin_window_current_text "#W"
set -g @catppuccin_window_current_fill 'number'
set -g @catppuccin_window_current_text '#W'
set -g @catppuccin_window_current_color '#{E:@thm_surface_2}'
set -g @catppuccin_date_time_text '%d.%m. %H:%M'
set -g @catppuccin_status_module_text_bg '#{E:@thm_mantle}'

set -g status-right-length 100
set -g status-left-length 100
set -g status-left '#{E:@catppuccin_status_session} '
set -g status-right "#{E:@catppuccin_status_application}"
set -agF status-right "#{E:@catppuccin_status_cpu}"
set -ag status-right "#{E:@catppuccin_status_session}"
set -ag status-right "#{E:@catppuccin_status_uptime}"
set -agF status-right "#{E:@catppuccin_status_battery}"
