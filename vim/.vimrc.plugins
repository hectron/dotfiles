if &compatible
  set nocompatible
end

call plug#begin('~/.vim/plugged')

Plug 'jlanzarotta/bufexplorer'
Plug 'mileszs/ack.vim'
Plug 'airblade/vim-gitgutter'
Plug 'scrooloose/nerdtree'
Plug 'vim-ruby/vim-ruby'
Plug 'tpope/vim-commentary' " Easily comment
Plug 'tpope/vim-fugitive'   " Git blame, diff, browse, etc
Plug 'tpope/vim-rhubarb'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-rails'

Plug 'benmills/vimux'
Plug 'vim-test/vim-test' " Run tests in conjuction with vimux

Plug 'autozimu/LanguageClient-neovim', {
    \ 'branch': 'next',
    \ 'do': 'bash install.sh',
    \ }
Plug 'leafgarland/typescript-vim'

" (Optional) Multi-entry selection UI.
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'junegunn/goyo.vim'

Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'vimwiki/vimwiki'
" Plug 'maralla/completor.vim'

if has('nvim-0.5')
  Plug 'neovim/nvim-lspconfig'
  Plug 'gfanto/fzf-lsp.nvim'
  Plug 'nvim-treesitter/nvim-treesitter', { 'do': ':TSUpdate' }
endif

" Go plugins
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }

" Colors
Plug 'pineapplegiant/spaceduck', { 'branch': 'main' }

if filereadable(expand("~/.vimrc.plugins.local"))
  source ~/.vimrc.plugins.local
endif

call plug#end()
